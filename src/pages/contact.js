import { useState } from "react";
import Head from "next/head";
const COUNTRY_CODES = [
  { code: "+91", name: "India" },
  { code: "+1", name: "United States" },
  { code: "+44", name: "United Kingdom" },
  { code: "+61", name: "Australia" },
  { code: "+81", name: "Japan" },
  { code: "+86", name: "China" },
];
const COUNTRIES = [
  { code: "us", name: "United States" },
  { code: "uk", name: "United Kingdom" },
  { code: "au", name: "Australia" },
  { code: "jp", name: "Japan" },
  { code: "cn", name: "China" },
];
const DEGREE = [
  { value: 1, name: "4 year degree" },
  { value: 2, name: "3 year degree" },
  { value: 3, name: "High school" },
  { value: 4, name: "Masters degree(Full time/Part Time)" },
];
const ContactForm = () => {
  const [name, setName] = useState("");
  const [email, setEmail] = useState("");
  const [phone, setPhone] = useState("");
  const [countryCode, setCountryCode] = useState(COUNTRY_CODES[0].code);
  const [countries, setCountries] = useState([]);
  const [study1, setStudy1] = useState("");
  const [study2, setStudy2] = useState("");
  const [time, setTime] = useState("");
  const [dob, setDob] = useState("");
  const [degree, setDegree] = useState("");
  const [cgpa, setCgpa] = useState("");
  const [ielts, setIelts] = useState("");
  const [ieltsbool, setIeltsbool] = useState("");
  const [gmat, setGmat] = useState("");
  const [gmatbool, setGmatbool] = useState("");
  const [visa, setVisa] = useState("");
  const [visabool, setVisabool] = useState("");
  const [english, setEnglish] = useState("");
  const [qualify, setQualify] = useState("");
  const [backlog, setBacklog] = useState("");

  const handleCountryChange = (e) => {
    const { value, checked } = e.target;
    if (checked) {
      setCountries([...countries, value]);
    } else {
      setCountries(countries.filter((c) => c !== value));
    }
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log(`Name: ${name}`);
    console.log(`Email: ${email}`);
    console.log(`Code:${countryCode}`);
    console.log(`Phone: ${phone}`);
    console.log(`degree:${degree}`);
    console.log(`backlog:${backlog}`);
    console.log(`Countries: ${countries}`);
    console.log(`Study1: ${study1}`);
    console.log(`Study2: ${study2}`);
    console.log(`Time: ${time}`);
    console.log(`Dob: ${dob}`);
    console.log(`CGPA: ${cgpa}`);
    console.log(`ielts: ${ielts}`);
    console.log(`ieltsbool: ${ieltsbool}`);
    console.log(`gmat: ${gmat}`);
    console.log(`gmatbool: ${gmatbool}`);
    console.log(`Visa: ${visa}`);
    console.log(`Visa status: ${visabool}`);
    console.log(`English ${english}`);
    console.log(`qualify: ${qualify}`);
    console.log(`backlog: ${backlog}`);
  };

  return (
    <>
      <Head>
        <title>Contact Us</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>

      <form onSubmit={handleSubmit} className="py-5 bg-slate-100">
        <h1 className="font-extrabold text-center text-6xl mb-2 text-gray-800">
          Contact
        </h1>
        <div className="max-w-md flex flex-col mx-auto border shadow bg-white border-gray-200 rounded-lg p-5">
          <label className="text-gray-700" htmlFor="name">
            Name (as per passport):
          </label>
          <input
            className="block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-200 rounded-md focus:border-blue-400 focus:ring-blue-300 focus:ring-opacity-40  focus:outline-none focus:ring"
            type="text"
            id="name"
            value={name}
            onChange={(e) => setName(e.target.value)}
          />
          <label className="text-gray-700" htmlFor="email">
            Email:
          </label>
          <input
            className="block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-200 rounded-md focus:border-blue-400 focus:ring-blue-300 focus:ring-opacity-40  focus:outline-none focus:ring"
            type="email"
            id="email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
          />
          <label className="text-gray-700 pt-2" htmlFor="phone">
            Phone (Whatsapp):
          </label>
          <div className="flex">
            <select
              id="countryCode"
              value={countryCode}
              onChange={(e) => setCountryCode(e.target.value)}
            >
              {COUNTRY_CODES.map((country) => (
                <option key={country.code} value={country.code}>
                  {country.name} ({country.code})
                </option>
              ))}
            </select>
            <input
              className="block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-200 rounded-md focus:border-blue-400 focus:ring-blue-300 focus:ring-opacity-40  focus:outline-none focus:ring"
              type="tel"
              id="phone"
              value={phone}
              onChange={(e) => setPhone(e.target.value)}
            />
          </div>
          <label className="text-gray-700 pt-2" htmlFor="qualify">
            Previous qualification:
          </label>
          <input
            className="block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-200 rounded-md focus:border-blue-400 focus:ring-blue-300 focus:ring-opacity-40  focus:outline-none focus:ring"
            type="text"
            id="qualify"
            value={qualify}
            onChange={(e) => setQualify(e.target.value)}
          />
          <legend className="text-gray-700 py-2" htmlFor="degree">
            Degree type:
          </legend>
          {DEGREE.map((d) => (
            <div key={d.value}>
              <input
                className="mr-2"
                id={`d-${d.value}`}
                type="radio"
                value={d.name}
                name="degree"
                onChange={(e) => setDegree(e.target.value)}
              />
              <label htmlFor={`degree-${d.value}`} className="text-black">
                {d.name}
              </label>
            </div>
          ))}
          <label className="text-gray-700 pt-2">Date of Birth:</label>
          <input
            value={dob}
            onChange={(e) => setDob(e.target.value)}
            className="block mt-2 w-full placeholder-gray-400/70 rounded-lg border border-gray-200 bg-white px-5 py-2.5 text-gray-700 focus:border-blue-400 focus:outline-none focus:ring focus:ring-blue-300 focus:ring-opacity-40   "
            type="date"
          />
          <label className="text-gray-700 pt-2">CGPA or % scored:</label>
          <input
            value={cgpa}
            onChange={(e) => setCgpa(e.target.value)}
            className="block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-200 rounded-md focus:border-blue-400 focus:ring-blue-300 focus:ring-opacity-40  focus:outline-none focus:ring"
          />
          <label className="text-gray-700 pt-2">IELTS scored:</label>
          <div className="flex-col py-1 space-x-2">
            <>
              <input
                name="ielts"
                value={ieltsbool}
                onChange={() => setIeltsbool(true)}
                type="radio"
              />
              <label>Yes</label>
            </>

            <>
              <input
                name="ielts"
                value={ieltsbool}
                onChange={() => setIeltsbool(false)}
                type="radio"
              />
              <label className="">No</label>
            </>
            {ieltsbool && (
              <input
                placeholder="Enter the score"
                value={ielts}
                onChange={(e) => setIelts(e.target.value)}
                className="block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-200 rounded-md focus:border-blue-400 focus:ring-blue-300 focus:ring-opacity-40  focus:outline-none focus:ring"
              />
            )}
          </div>
          <label className="text-gray-700 pt-2">GRE/GMAT score:</label>
          <div className="flex-col py-1 space-x-2">
            <>
              <input
                name="gmat"
                value={gmatbool}
                onChange={() => setGmatbool(true)}
                type="radio"
              />
              <label>Yes</label>
            </>

            <>
              <input
                name="gmat"
                value={gmatbool}
                onChange={() => setGmatbool(false)}
                type="radio"
              />
              <label className="">No</label>
            </>
            {gmatbool && (
              <input
                placeholder="Enter the score"
                value={gmat}
                onChange={(e) => setGmat(e.target.value)}
                className="block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-200 rounded-md focus:border-blue-400 focus:ring-blue-300 focus:ring-opacity-40  focus:outline-none focus:ring"
              />
            )}
          </div>
          <label className="text-gray-700 pt-2">
            English Score(12th Grade):
          </label>
          <input
            value={english}
            onChange={(e) => setEnglish(e.target.value)}
            className="block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-200 rounded-md focus:border-blue-400 focus:ring-blue-300 focus:ring-opacity-40  focus:outline-none focus:ring"
          />
          <label className="text-gray-700 pt-2">
            Number of Backlogs(0 if none):
          </label>
          <input
            value={backlog}
            onChange={(e) => setBacklog(e.target.value)}
            className="block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-200 rounded-md focus:border-blue-400 focus:ring-blue-300 focus:ring-opacity-40  focus:outline-none focus:ring"
          />
          <label className="text-gray-700 pt-2">Visa applied before?:</label>
          <div className="flex-col py-1 space-x-2">
            <>
              <input
                name="visa"
                value={visabool}
                onChange={() => setVisabool(true)}
                type="radio"
              />
              <label>Yes</label>
            </>
            <>
              <input
                name="visa"
                value={visabool}
                onChange={() => setVisabool(false)}
                type="radio"
              />
              <label className="">No</label>
            </>
            {visabool && (
              <input
                placeholder="Enter the country"
                value={visa}
                onChange={(e) => setVisa(e.target.value)}
                className="block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-200 rounded-md focus:border-blue-400 focus:ring-blue-300 focus:ring-opacity-40  focus:outline-none focus:ring"
              />
            )}
          </div>
          <fieldset>
            <legend className="text-gray-700 py-2">
              Interested Countries:
            </legend>
            {COUNTRIES.map((country) => (
              <div key={country.code}>
                <input
                  className="mr-2"
                  type="checkbox"
                  id={`country-${country.code}`}
                  value={country.name}
                  checked={countries.includes(country.name)}
                  onChange={handleCountryChange}
                />
                <label
                  className="text-black"
                  htmlFor={`country-${country.code}`}
                >
                  {country.name}
                </label>
              </div>
            ))}
          </fieldset>
          <label className="text-gray-700" htmlFor="study">
            Choice of Study (Priority 1):
          </label>
          <input
            className="block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-200 rounded-md focus:border-blue-400 focus:ring-blue-300 focus:ring-opacity-40  focus:outline-none focus:ring"
            type="text"
            id="study"
            value={study1}
            onChange={(e) => setStudy1(e.target.value)}
          />
          <label className="text-gray-700" htmlFor="study">
            Choice of Study (Priority 2):
          </label>
          <input
            className="block w-full px-4 py-2 mt-2 text-gray-700 bg-white border border-gray-200 rounded-md focus:border-blue-400 focus:ring-blue-300 focus:ring-opacity-40  focus:outline-none focus:ring"
            type="text"
            id="study"
            value={study2}
            onChange={(e) => setStudy2(e.target.value)}
          />
          <label htmlFor="time">Good Time to Reach You:</label>
          <input
            className="block mt-2 w-full placeholder-gray-400/70 rounded-lg border border-gray-200 bg-white px-5 py-2.5 text-gray-700 focus:border-blue-400 focus:outline-none focus:ring focus:ring-blue-300 focus:ring-opacity-40   "
            type="datetime-local"
            id="time"
            value={time}
            onChange={(e) => setTime(e.target.value)}
          />
          <div className="flex justify-center mt-6">
            <button
              type="submit"
              onSubmit={handleSubmit}
              className="px-8 py-2.5 leading-5 text-white transition-colors duration-300 transform bg-gray-700 rounded-md hover:bg-gray-600 focus:outline-none focus:bg-gray-600"
            >
              Submit
            </button>
          </div>
        </div>
      </form>
    </>
  );
};

export default ContactForm;
